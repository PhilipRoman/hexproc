#include "classfile.hxp"

CLASSFILE_MAGIC
VERSION(8, 0)

CONSTANT_POOL
	CLASS_ENTRY(jvmhello.class, "JvmHello")
	CLASS_ENTRY(object.class, "java/lang/Object")
	CLASS_ENTRY(printstream.class, "java/io/PrintStream")
	CLASS_ENTRY(system.class, "java/lang/System")

	STRING_ENTRY(message, "Hello, world!")

	FIELD_ENTRY(system.out, pool.system.class, "out", "Ljava/io/PrintStream;")
	METHOD_ENTRY(printstream.println, pool.printstream.class, "println", "(Ljava/lang/String;)V")

	UTF8_ENTRY(main.name, "main")
	UTF8_ENTRY(main.type, "([Ljava/lang/String;)V")
	UTF8_ENTRY(code_attribute.name, "Code")

[2](modifier.public | modifier.final) // class access flags
[2](pool.jvmhello.class) [2](pool.object.class) // this class, super class

TABLE_LENGTH(0) // interfaces

TABLE_LENGTH(0) // fields

TABLE_LENGTH(1) // methods
	// main method header
	[2](modifier.public | modifier.static)
	[2](pool.main.name) [2](pool.main.type) // name, type
	[2](1) // number of attributes
	[2](pool.code_attribute.name) // 'Code'
		[4](main.code_attribute.end - main.code_attribute.start) // 'Code' attribute size
		main.code_attribute.start:
		[2](2) [2](1) // max stack size, max local size
		[4](main.code.end - main.code) // code size
		main.code:
			getstatic(pool.system.out)
			ldc(pool.message)
			invokevirtual(pool.printstream.println)
			return_void
		main.code.end:
		[2](0) // exception table size
		[2](0) // number of attributes for this attribute
		main.code_attribute.end:

TABLE_LENGTH(0) // attributes
